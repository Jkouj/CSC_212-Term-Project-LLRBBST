#include <iostream>
#include <vector>
using namespace std;

class OrderedList {
public:
    OrderedList() { length = 0; }
    // Inserts the given thing into the list.
    void insert(int thing) {
        int low = 0; int high = length; int mid;
        while (low != high) {
            mid = (low + high) / 2;
            if (thing < vec[mid]) high = mid;
            else low = mid + 1;
        }
        vec.insert(vec.begin() + low, thing);
        length++;
    }
    // Deletes the given element from the list.
    void remove(int thing) {
        int index = search(thing);
        if (index == -1) return;
        vec.erase(vec.begin() + index - 1);
        length--;
    }
    // Returns the index of the given thing in the list, or -1 if the given thing isn't in the list.
    int search(int thing) const {
        int low = 0, high = length - 1, mid, midThing;
        while (low < high) {
            mid = (low + high) / 2;
            midThing = vec[mid];
            if (thing < midThing) high = mid - 1;
            else if (thing > midThing) low = mid + 1;
            else return mid + 1;
        }
        return -1;
    }
    // Returns the element at the given index, or -1 if the given index is invalid.
    int access(int index) const {
        if (index < 1 || index > length) {
            cout << "ERROR: invalid index" << endl;
            exit(0);
        }
        return vec[index - 1];
    }
    // Prints the contents of the list to the console.
    void print() {
        cout << "list: ";
        for (int i = 0; i < length; i++) {
            cout << vec[i] << " ";
        }
        cout << endl;
    }
private:
    int length;
    vector<int> vec;
};

int main() {
    OrderedList list = OrderedList();
}
